{"version":3,"sources":["../src/gauge.js"],"names":["LinearGauge","canvas","inputLow","inputHigh","horizontal","color","pointerHeight","width","height","borderwidth","canvasWidth","canvasHeight","pointerColor","prototype","constructor","updateInit","updateSize","translateRange","Input","outputHigh","outputLow","updatePointer","nextValue","ctx","getContext","x1","x2","y1","y2","fillStyle","clearRect","fillRect","window"],"mappings":"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","file":"gauge.js","sourcesContent":["(function (LinearGauge) {\r\n\r\n    'use strict';\r\n\r\n    LinearGauge.LinearGauge = LinearGauge.LinearGauge || {};\r\n\r\n    // constructor\r\n    LinearGauge.LinearGauge = function ( canvas, inputLow, inputHigh, horizontal, color, pointerHeight, width, height, borderwidth) {\r\n\r\n        this.horizontal = horizontal;\r\n        this.canvas = canvas;\r\n        this.inputLow = inputLow;\r\n        this.inputHigh = inputHigh;\r\n        this.canvasWidth = width;\r\n        this.canvasHeight = height;\r\n        this.pointerColor = color;\r\n        this.pointerHeight = pointerHeight;\r\n        this.borderwidth = borderwidth;\r\n\r\n    }\r\n\r\n    LinearGauge.LinearGauge.prototype = {\r\n\r\n        constructor: LinearGauge.LinearGauge,\r\n\r\n        updateInit( inputLow, inputHigh, horizontal, color ) {\r\n\r\n            this.horizontal = horizontal;\r\n            this.inputLow = inputLow;\r\n            this.inputHigh = inputHigh;\r\n            this.pointerColor = color;\r\n        },\r\n        updateSize(width, height, pointerHeight, borderwidth ){\r\n            this.canvasWidth = width;\r\n            this.canvasHeight = height;\r\n            this.pointerHeight = pointerHeight;\r\n            this.borderwidth = borderwidth;\r\n        },\r\n        translateRange: function (\r\n            Input, inputHigh, inputLow, outputHigh, outputLow\r\n        ) {\r\n\r\n            inputHigh = inputHigh ? inputHigh : this.inputHigh;\r\n            inputLow = inputLow ? inputLow : this.inputLow;\r\n\r\n            outputHigh = outputHigh ? outputHigh : 1;\r\n            outputLow = outputLow ? outputLow : 0;\r\n\r\n            return ((Input - inputLow) / (inputHigh - inputLow)) *\r\n                (outputHigh - outputLow) + outputLow;\r\n        },\r\n        updatePointer: function ( nextValue ) {\r\n\r\n            var ctx = this.canvas.getContext(\"2d\");\r\n            var x1 = 0, x2 = 0, y1 = 0, y2 = 0;\r\n            ctx.fillStyle = this.pointerColor;\r\n\r\n            ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n\r\n\r\n            if (this.horizontal) {\r\n                x1 = this.borderwidth;\r\n                y1 = this.borderwidth;\r\n\r\n                x2 = this.translateRange(\r\n                    nextValue,\r\n                    this.inputHigh,\r\n                    this.inputLow,\r\n                    this.canvasWidth - this.borderwidth,\r\n                    0\r\n                );\r\n                y2 = this.pointerHeight;\r\n\r\n            }\r\n            else {\r\n                x1 = this.borderwidth;\r\n                y1 = this.translateRange(\r\n                    nextValue,\r\n                    this.inputHigh,\r\n                    this.inputLow,\r\n                    this.borderwidth,\r\n                    this.canvasHeight\r\n                );\r\n\r\n                x2 = this.pointerHeight;\r\n                y2 = this.canvasHeight - y1;\r\n\r\n            }\r\n\r\n            ctx.fillRect(x1,y1,x2,y2);\r\n\r\n        }\r\n    }\r\n}(window.LinearGauge = window.LinearGauge || {}));\r\n\r\n"]}